"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Setup
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Custom variables
let vimDir = (has('win64')) ? '$HOMEPATH/vimfiles': '$HOME/.vim'
let pluginsDir = expand(vimDir . '/plugins/')
let vimPlugInstalled = isdirectory(pluginsDir)

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugins
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Auto vim-plug installation if plugin folder isn't present
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif


" Vim-Plug start
call plug#begin()

" ==> Files and Folders Navigation
" Hierarchical folder structure support
Plug 'scrooloose/nerdtree' , { 'on': 'NERDTreeToggle' }
" NERDTree tab support
Plug 'jistr/vim-nerdtree-tabs', { 'on': 'NERDTreeToggle' }

" ==> Window and Buffer Management
" Maintain a stable and coherent window management
Plug 'zhaocai/GoldenView.Vim'
" Automaticaly resize windows to golden ratio. Used in simpler windows
Plug 'roman/golden-ratio'
" CTRL-W o to maximize current window. Toggle to restore previous layout
Plug 'vim-scripts/ZoomWin'
" Delete buffers without deleting windows
Plug 'vim-scripts/bufkill.vim'

" ==> UI
" Light as air status-bar
Plug 'vim-airline/vim-airline'
" More color themes for airline
Plug 'vim-airline/vim-airline-themes'
" Enable window transparency in windows
" Copy vimtweak.dll (https://github.com/jdve/vimtweak) to gvim.exe location
Plug 'mattn/transparency-windows-vim'

" ==> Editting
" Press <Tab> to show all kinds of auto complete
Plug 'ervandew/supertab'
" Surround text with s motion
Plug 'tpope/vim-surround'
" Allow the . command to work on plugin actions (for surround)
Plug 'tpope/vim-repeat'
" Add commentary with gcc for line. g<b and g>b for block
Plug 'tomtom/tcomment_vim'
" Emmet (Prev. Zen Coding on visual studio) plugin for fast HTML/CSS typing
Plug 'mattn/emmet-vim' , { 'for': ['html', 'css'] }

" ==> LSP
Plug 'neoclide/coc.nvim', {'branch': 'release'}

" ==> Syntax
" Syntax pack
Plug 'sheerun/vim-polyglot'
" C# support
Plug 'OrangeT/vim-csharp'
" tmux.conf support
Plug 'tmux-plugins/vim-tmux'

" ==> Code Navigation
" Vim matchit plugin (makes % match with other tags)
Plug 'vim-scripts/matchit.zip'
" Highlights matching HTML tags
Plug 'gregsexton/MatchTag'
" Tags
Plug 'ludovicchabant/vim-gutentags'

" ==> Snippets
" Snippets database
Plug 'honza/vim-snippets'
" Snipmate dependencies
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
" VimL snippet implementation
Plug 'garbas/vim-snipmate'

" ==> External Integrations
" Git
Plug 'tpope/vim-fugitive'
" Tmux
Plug 'tmux-plugins/vim-tmux-focus-events'
" Fzf
Plug '~/.fzf'
Plug 'junegunn/fzf.vim'

" ==> Color Schemes
Plug 'nanotech/jellybeans.vim'

" ==> Unused (Historical purposes only)
" Tilled window management in VIM
" Plug 'spolu/dwm.vim'  "Doesn't work very well with NERDTree
" Buffer explorer
" Plug 'fholgado/minibufexpl.vim'  "Compatibility issues with dwm
" <Leader>ww to select a window. <Leader>ww to swap it with other window
" Plug 'wesQ3/vim-windowswap'  "Currently unused due to dwm window management
" Automatically resize selected windows
" Plug 'justincampbell/vim-eighties'  "Conflicts with dwm
" Color schemes
" Plug 'flazz/vim-colorschemes' "Unused
" Plug 'altercation/vim-colors-solarized' "Unused
" Plug 'sjl/badwolf' "Unused
" Plug 'tomasr/molokai' "Unused

" Vim-Plug end
call plug#end()

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => General
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Set to auto read when a file is changed from the outside
set autoread

" Enable filetype plugins
filetype plugin on
filetype indent on

" Turn backup and swap files off
set nobackup
set nowb
set noswapfile

" Reload when a file is changed from the outside
set autoread

" Tab completion on Vim commands with extra-Tab support
set wildmode=longest,list,full
set wildmenu

" Treat all numbers as decimals
" useful when using <C-a> and <C-x>
set nrformats=

" Disabled automatic new line comment (annoying specially when editing vimrc)
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

" Correct comment highlighting on coc json config file
" https://github.com/neoclide/coc.nvim/wiki/Using-the-configuration-file
autocmd FileType json syntax match Comment +\/\/.\+$+

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM UI
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Always show current position
set ruler

" Ignore case when searching
set ignorecase

" When searching try to be smart about cases
set smartcase

" (Don't) Highlight search results
" set hlsearch

" Makes search act like search in modern browsers
set incsearch

" Show matching brackets when text indicator is over them
set showmatch

" No annoying sound on errors
set noerrorbells
set novisualbell
set t_vb=

" Remove GVIM menus
:set guioptions-=m  "menu bar
:set guioptions-=T  "toolbar
:set guioptions-=r  "right-hand scroll bar
:set guioptions-=L  "left-hand scroll bar

" Always show the status line
:set laststatus=2

" Set extra margin to the left side of the screen
set foldcolumn=0

" Start GVIM maximized on Windows
if(has('win32') || has('win64'))
    autocmd GUIEnter * simalt ~x
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Colors and Fonts
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Enable syntax highlighting
syntax on

" Set background colour
set background=dark

" Define colorscheme
if (has('gui_running') && vimPlugInstalled)
    colorscheme jellybeans
endif

" Define font
if has('gui_running')
    if has('unix')
        set guifont=Monaco:h10
    else
        set guifont=Consolas:h10
    endif
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Text Editing
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" set utf8 as standard encoding
set encoding=utf8

" Use spaces instead of tabs
set expandtab

" 1 tab == 4 spaces
set shiftwidth=4
set tabstop=4

" Auto indent - next line in same location
set ai

" Word Wrap
set wrap

" Indent wrapped lines
set breakindent

" Set absolute and relative line numbers
set number
set relativenumber

" Use default system clipboard.
set clipboard=unnamed

" Make backspace work like most applications
set backspace=indent,eol,start

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Keybindings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"<Leader> key avoids default vim key collision
let mapleader = "\<Space>"

" fzf
" https://jesseleite.com/posts/2/its-dangerous-to-vim-alone-take-fzf
nmap <Leader>/ :BLines<CR>
nnoremap <Leader>p :Files<CR>
nnoremap <Leader>f :Rg<CR>
nnoremap <Leader>b :Buffers<CR>
nnoremap <Leader>h :History<CR>
nnoremap <Leader>t :Tags<CR>

" gutentags
let g:gutentags_cache_dir = '~/.gutentags_cache'

" stop it with the annoying macro q that I never use (re map it to <Leader> q)
noremap <Leader>q q
noremap q <Nop>

" Make Enter and Shift-Enter insert lines below and above
" without entering insert mode
nnoremap <CR> o<Esc>k
nnoremap <S-Enter> O<Esc>j

" Space jk for normal mode on visual mode and not on insert mode to avoid
" row selection delay in visual mode
inoremap jk <Esc>
vnoremap <Leader>jk <Esc>

" Traverse only display lines (like normal text editors)
nnoremap j gj
nnoremap k gk

" Make gm go to exact position of any mark
nnoremap gm `

"Make gM go to start of line of any mark
nnoremap gM '

" Make tabs behave like modern text editors
nnoremap <C-Tab> :tabnext<CR>
nnoremap <C-S-Tab> :tabprevious<CR>
nnoremap <Leader>tn :tabnew<CR>
nnoremap <C-F4> :tabclose!<CR>

" Shortcut to open NERDTree
nnoremap <Leader>ft :NERDTreeToggle<CR>

" Change vim working directory to the current file dir
nnoremap <Leader>cd :cd %:p:h<CR>:pwd<CR>

" Run the current file. (Useful for updating vim config)
nnoremap <Leader>R :source %<CR>

" Make SPC b d forcefully close the current buffer without deleting window
nnoremap <Leader>bd :BD!<CR>

" Make SPC w c forcefully close the current window
nnoremap <Leader>wc :close!<CR>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugin Configurations
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" coc 
let g:coc_global_extensions = [
\  'coc-webpack',
\  'coc-docker',
\  'coc-sh',
\  'coc-json',
\  'coc-tsserver',
\  'coc-html',
\  'coc-css',
\  'coc-yaml',
\  'coc-yaml',
\  'coc-marketplace',
\  'coc-vetur',
\  'coc-highlight',
\  'coc-emmet',
\  'coc-svg',
\  'coc-vimlsp',
\  'coc-python',
\  'coc-gitignore',
\  'coc-import-cost',
\  'coc-prettier',
\  'coc-eslint',
\  'coc-stylelint',
\]

" ==> NERDTree
" Open a new NERDTree everytime you open a tab
let g:nerdtree_tabs_open_on_new_tab = 0
" VIM current working directory is never changed to NERDTree root
let g:NERDTreeChDirMode = 0
" Show bookmarks when opening a NERDTree
let g:NERDTreeShowBookmarks = 1
" Show hidden files on NERDTree
let NERDTreeShowHidden = 1

" ==> Airline
let g:airline#extensions#tabline#enabled = 1

" ==> GoldenView
" Allow custom mappings
let g:goldenview__enable_default_mapping = 0

" Split to tiled windows
nnoremap <silent> <Leader>ws  <Plug>GoldenViewSplit

" Quickly switch current window with the main pane and toggle back
nnoremap <silent> <Leader>ww <Plug>GoldenViewSwitchMain
nnoremap <silent> <Leader>wW <Plug>GoldenViewSwitchToggle

" Jump to next and previous window
nnoremap <silent> <Leader>wn  <Plug>GoldenViewNext
nnoremap <silent> <Leader>wp  <Plug>GoldenViewPrevious

" Manually resize focused window
nmap <silent> <Leader>wr <Plug>GoldenViewResize

" Toggle automatic window resizing
nmap <silent> <Leader>wtr <Plug>ToggleGoldenViewAutoResize
