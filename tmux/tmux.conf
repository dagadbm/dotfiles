###############################################################################
# General

# note: press K inside vim (with tmuxplugins/vim-tmux installed) to jump to man definition of each of the tmux configurations!

# address vim mode switching delay
set -s escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# windows and panels start at 1 instead of 0
set -g base-index 1
set -g pane-base-index 1

set -g renumber-windows on
set -g allow-rename off
set -g set-titles on

set -s default-terminal "screen-256color"
# if colors are not working do echo $TERM outside of tmux and copy its value here
#set-option -sa terminal-overrides ',*-256color:Tc'
set-option -sa terminal-overrides ',*-256color:RGB'

set -g status-keys vi
setw -g mode-keys vi

set -g mouse on

setw -g monitor-activity off
set -g visual-activity off

# focus events enabled for terminals that support them (vim)
set -g focus-events on 

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Sane window splitting inspired from tmux pain-control, similar to vim
bind-key v split-window -h -c "#{pane_current_path}"
bind-key V split-window -fh -c "#{pane_current_path}"
# bind-key "\\" split-window -h -c "#{pane_current_path}"
# bind-key | split-window -fh -c "#{pane_current_path}"

bind-key s split-window -v -c "#{pane_current_path}"
bind-key S split-window -fv -c "#{pane_current_path}"
# bind-key - split-window -v -c "#{pane_current_path}"
# bind-key _ split-window -fv -c "#{pane_current_path}"

# swap windows
bind-key -r < swap-window -t -1
bind-key -r > swap-window -t +1

# resize window
bind-key -r H resize-pane -L 10
bind-key -r J resize-pane -D 10
bind-key -r K resize-pane -U 10
bind-key -r L resize-pane -R 10

# vim/fzf tmux integration to play together (from vim-tmux-navigator)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j) || ($is_fzf && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || ($is_fzf && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "($is_vim && tmux send-keys C-l) || tmux select-pane -R"

# easier and faster switching between next/prev window/session
bind p previous-window
bind n next-window
bind P switch-client -p
bind N switch-client -n

# use k to kill pane and x to kill window X will kill session because of tmux-sessionist
bind-key k kill-pane
bind-key x unlink-window -k

# use r/R to rename window and session respectively
bind-key r command-prompt 'rename-window %%'
bind-key R command-prompt 'rename-session %%'

bind Enter copy-mode

# clear screen
bind-key q send-keys -R \; clear-history

# Easy config reload
bind-key R run-shell 'tmux source-file ~/.tmux.conf > /dev/null; tmux display-message "tmux.conf sourced."'

# Remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# support for both osx and linux due to the reattach-to-user-namespace os x fix
# taken from http://www.economyofeffort.com/2013/07/29/reattach-to-user-namespace-the-fix-for-your-tmux-in-os-x-woes/
# (see comments)
if-shell "type 'reattach-to-user-namespace' >/dev/null" "set -g default-command 'reattach-to-user-namespace -l $SHELL'"


###############################################################################
# Plugins

# Themes
set -g @plugin 'odedlaz/tmux-onedark-theme'
# set -g @plugin 'egel/tmux-gruvbox'

set -g @plugin 'tmux-plugins/tpm'
# Tmux Plugin Manager
# To install plugins: Prefix + I
# To update plugins: Prefix + U
# To uninstall plugins (after removing from config): Prefix + alt + u
# scripts @ "~/.tmux/plugins/tpm/bin/clean_plugins"


set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# Shows on status bar if you pressed prefix or if you are in copy mode
# just add #{prefix_highlight} to status-left/right
#custom config
set -g @prefix_highlight_fg 'white' # default is 'colour231'
set -g @prefix_highlight_bg 'blue'  # default is 'colour04'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold' # default is 'fg=default,bg=yellow'
set -g @prefix_highlight_prefix_prompt 'Prompt'
set -g @prefix_highlight_copy_prompt 'Copy'


set -g @plugin 'tmux-plugins/tmux-copycat'
# Search with Prefix + / like in vim (use n N to navigate between results, Enter to copy result)


set -g @plugin 'tmux-plugins/tmux-yank'
# makes paste work properly using custom OS dependent clipboard.
# Each OS needs different external copy/paste handler plugin.
# See github documento for more info
# for macOSX this option is needed along with brew install reattach-to-user-namespace
set-option -g default-command "reattach-to-user-namespace -l $SHELL"


set -g @plugin 'tmux-plugins/tmux-resurrect'
# persists tmux session
# Prefix + Ctrl-s to save
# Prefix + Ctrl-r to restore
# sessions files stored in ~/.tmux/resurrect


set -g @plugin 'tmux-plugins/tmux-continuum'
# continuous saving of tmux sessions (built on top of tmux-resurrect)
# Tmux is automatically started after the computer/server is turned on.
set -g @continuum-boot 'on'
# start iterm2 in fullscreen
set -g @continuum-boot-options 'iterm,fullscreen'
# automatic restore tmux session
set -g @continuum-restore 'on'


set -g @plugin 'tmux-plugins/tmux-sessionist'
# easy tmux session management
# prefix + g - prompts for session name and switches to it. Performs 'kind-of' name completion.
# Faster than the built-in prefix + s prompt for long session lists.
# prefix + C (shift + c) - prompt for creating a new session by name.
# prefix + X (shift + x) - kill current session without detaching tmux.
# prefix + g (shift + g) - switch to previous session
set -g @sessionist-alternate 'g'
set -g @sessionist-goto 'G'
set -g @sessionist-new 'C'
set -g @sessionist-kill-session 'X'
set -g @sessionist-join-pkne 't'
set -g @sessionist-promote-pane 'T'


set -g @plugin 'tmux-plugins/tmux-open'
# open files with open comand in copy mode
# o calls OS open command
set -g @open 'o'
# e edits the file using the $EDITOR
set -g @open-editor 'e'
# Shift-s searches the highlighted selection in google!


set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# better mouse integration with tmux. check below options if behavior if weird
# look at the github repo for more info
set -g @scroll-down-exit-copy-mode "off" # default on
set -g @scroll-without-changing-pane "on" # default off
set -g @scroll-in-moused-over-pane "on" # default on
set -g @scroll-speed-num-lines-per-scroll "3" # default 3
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on" # default off


set -g @plugin 'tmux-plugins/tmux-battery'
# Allows putting battery icons and notifications on the status-bar
set -g @batt_remain_short true


###############################################################################
# Theme

set -g status-interval 1
set -g status-left-length 200
set -g status-right-length 200
set -g status-right '#{prefix_highlight} #{battery_icon} #{battery_percentage} #{battery_remain} | %a %d/%m/%Y   %H:%M:%S '
#set-window-option -g window-status-current-fg white
#set-window-option -g window-status-current-bg black


###############################################################################
# Bootstrap

# Auto Install TMUX plugin manager if it doesn't exist
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'

# Fixes iterm2 integration. Should go after "run '~/.tmux/plugins/tpm/tpm'"
setw -g aggressive-resize off

