###############################################################################
# General

# tmux show-options -g | grep status

# address vim mode switching delay
set -s escape-time 0

# increase scrollback buffer size
set -g history-limit 100000

# tmux messages are displayed for 5 seconds
set -g display-time 5000

# windows and panels start at 1 instead of 0
set -g base-index 1
set -g pane-base-index 1

set -g renumber-windows on
set -g allow-rename off
set -g set-titles on

# default tmux terminal
# set -s default-terminal "screen-256color"
# use kitty as terminal
# set -s default-terminal "xterm-kitty"
set -s default-terminal "xterm-256color"

# https://github.com/navarasu/onedark.nvim/issues/112#issuecomment-1281022184
set-option -ga terminal-overrides ",xterm-256color:Tc"

set -g status-keys vi
setw -g mode-keys vi

set -g mouse on

# silence
set -g visual-activity off
set -g visual-bell off
set -g visual-silence on
setw -g monitor-activity off
set -g bell-action none

# focus events enabled for terminals that support them (vim)
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Sane window splitting inspired from tmux pain-control, similar to vim
# horizontal split
bind-key v split-window -h -c "#{pane_current_path}"
bind-key V split-window -fh -c "#{pane_current_path}"
bind-key "\\" split-window -h -c "#{pane_current_path}"
bind-key | split-window -fh -c "#{pane_current_path}"

# horizontal split
bind-key s split-window -v -c "#{pane_current_path}"
bind-key S split-window -fv -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
bind-key _ split-window -fv -c "#{pane_current_path}"

# swap windows
bind-key -r < swap-window -t -1
bind-key -r > swap-window -t +1

# resize window
bind-key -r H resize-pane -L 10
bind-key -r J resize-pane -D 10
bind-key -r K resize-pane -U 10
bind-key -r L resize-pane -R 10

# vim/fzf tmux integration
# https://github.com/christoomey/vim-tmux-navigator/issues/295#issuecomment-1021591011
is_vim_or_fzf="children=(); i=0; pids=( $(ps -o pid= -t '#{pane_tty}') ); \
while read -r c p; do [[ -n c && c -ne p && p -ne 0 ]] && children[p]+=\" $\{c\}\"; done <<< \"$(ps -Ao pid=,ppid=)\"; \
while (( $\{#pids[@]\} > i )); do pid=$\{pids[i++]\}; pids+=( $\{children[pid]-\} ); done; \
ps -o state=,comm= -p \"$\{pids[@]\}\" | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|fzf)(diff)?$'"

bind -n C-h run "($is_vim_or_fzf && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "($is_vim_or_fzf && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "($is_vim_or_fzf && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "($is_vim_or_fzf && tmux send-keys C-l) || tmux select-pane -R"

# easier and faster switching between next/prev window/session
bind p previous-window
bind n next-window
bind P switch-client -p
bind N switch-client -n

# use k to kill pane and K to kill window X will kill session because of tmux-sessionist
bind-key k kill-pane
bind-key K unlink-window -k

# use r/R to rename window and session respectively
bind-key r command-prompt 'rename-window %%'
bind-key R command-prompt 'rename-session %%'

bind-key Enter copy-mode
bind-key [ copy-mode
# bind-key -T copy-mode-vi v send -X begin-selection
# bind-key -T copy-mode-vi y send -X copy-selection

# clear screen
bind-key q send-keys -R \; clear-history

# Easy config reload
bind-key M-r run-shell 'tmux source-file ~/.tmux.conf > /dev/null; tmux display-message "tmux.conf sourced."'

# Remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# support for both osx and linux due to the reattach-to-user-namespace os x fix
# taken from http://www.economyofeffort.com/2013/07/29/reattach-to-user-namespace-the-fix-for-your-tmux-in-os-x-woes/
# (see comments)
if-shell "type 'reattach-to-user-namespace' >/dev/null" "set -g default-command 'reattach-to-user-namespace -l $SHELL'"

###############################################################################
# Statusline

# references
# https://github.com/tmux/tmux/wiki/Getting-Started#colours-and-styles
# https://github.com/tmux/tmux/wiki/Formats
# tmux show-options -g | grep status

# variables to configure statusline
# colorscheme taken from navarasu/onedark.nvim
# PRIMARY = text has green background, main accent colour
# SECONDARY = background is dark grey, secondary accent colour
%hidden COLOR_ACTIVE_FILL="#31353f"
%hidden COLOR_ACTIVE_ACCENT="#99c379"
%hidden ACTIVE_PRIMARY="#[fg=#{COLOR_ACTIVE_FILL}]#[bg=#{COLOR_ACTIVE_ACCENT}]"
%hidden ACTIVE_SECONDARY="#[fg=#{COLOR_ACTIVE_ACCENT}]#[bg=#{COLOR_ACTIVE_FILL}]"

%hidden COLOR_INACTIVE_FILL="#aab2bf"
%hidden COLOR_INACTIVE_ACCENT="#3b3f4c"
%hidden INACTIVE_PRIMARY="#[fg=#{COLOR_INACTIVE_FILL}]#[bg=#{COLOR_INACTIVE_ACCENT}]"
%hidden INACTIVE_SECONDARY="#[fg=#{COLOR_INACTIVE_ACCENT}]#[bg=#{COLOR_INACTIVE_FILL}]"

# Set status bar on
set -g status 1
# Update the status line every second
set -g status-interval 1
# Set the position of window lists.
set -g status-justify left
# Set the status bar position
set -g status-position bottom
# Set status bar background and foreground color.
set -g status-style bg="#{COLOR_ACTIVE_FILL}",fg="#{COLOR_ACTIVE_ACCENT}"

# status-left
set -g status-left-length 80
set -g status-left "#{E:ACTIVE_PRIMARY}#[bold] #S #{E:ACTIVE_SECONDARY}#{prefix_highlight}"

# set -g status-format[0] "#[align=left range=left #{E:status-left-style}]#[push-default]#{T;=/#{status-left-length}:status-left}#[pop-default]#[norange default]#[list=on align=#{status-justify}]#[list=left-marker]<#[list=right-marker]>#[list=on]#{W:#[range=window|#{window_index} #{E:window-status-style}#{?#{&&:#{window_last_flag},#{!=:#{E:window-status-last-style},default}}, #{E:window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{E:window-status-bell-style},default}}, #{E:window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{E:window-status-activity-style},default}}, #{E:window-status-activity-style},}}]#[push-default]#{T:window-status-format}#[pop-default]#[norange default]#{?window_end_flag,,#{window-status-separator}},#[range=window|#{window_index} list=focus #{?#{!=:#{E:window-status-current-style},default},#{E:window-status-current-style},#{E:window-status-style}}#{?#{&&:#{window_last_flag},#{!=:#{E:window-status-last-style},default}}, #{E:window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{E:window-status-bell-style},default}}, #{E:window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{E:window-status-activity-style},default}}, #{E:window-status-activity-style},}}]#[push-default]#{T:window-status-current-format}#[pop-default]#[norange list=on default]#{?window_end_flag,,#{window-status-separator}}}#[nolist align=right range=right #{E:status-right-style}]#[push-default]#{T;=/#{status-right-length}:status-right}#[pop-default]#[norange default]"
# set status-format[1] "#[align=centre]#{P:#{?pane_active,#[reverse],}#{pane_index}[#{pane_width}x#{pane_height}]#[default] }"

# status-right
# set status-right "#[fg=#aab2bf,bg=#282c34,nounderscore,noitalics]%R  %d/%m/%Y #[fg=#3e4452,bg=#282c34]#[fg=#3e4452,bg=#3e4452]#[fg=#aab2bf, bg=#3e4452] #[fg=#98c379,bg=#3e4452,nobold,nounderscore,noitalics]#[fg=#282c34,bg=#98c379,bold] #h #[fg=#e5c07b, bg=#98c379]#[fg=#e06c75,bg=#e5c07b]"
set status-right-length 80
# set status-right-style default

# currently selected window styling
set -g window-status-current-format "#{E:ACTIVE_PRIMARY}#[bold] #I  #W #{E:ACTIVE_SECONDARY}"
# default window styling
set -g window-status-format "#[fg=#{COLOR_ACTIVE_FILL}]#[bg=#{COLOR_INACTIVE_ACCENT}]#[nobold]#{E:INACTIVE_PRIMARY} #I  #W #[fg=#{COLOR_INACTIVE_ACCENT}]#[bg=#{COLOR_ACTIVE_FILL}]"
set -g window-status-separator ""


###############################################################################
# Plugins

set -g @plugin 'tmux-plugins/tpm'
# Tmux Plugin Manager
# To install plugins: Prefix + I
# To update plugins: Prefix + U
# To uninstall plugins (after removing from config): Prefix + alt + u
# scripts @ "~/.tmux/plugins/tpm/bin/clean_plugins"


set -g @plugin 'tmux-plugins/tmux-copycat'
# Search with Prefix + / like in vim (use n N to navigate between results, Enter to copy result)


set -g @plugin 'tmux-plugins/tmux-yank'
# makes paste work properly using custom OS dependent clipboard.
# Each OS needs different external copy/paste handler plugin.
# See github documento for more info
# for macOSX this option is needed along with brew install reattach-to-user-namespace
set-option -g default-command "reattach-to-user-namespace -l zsh"


set -g @plugin 'tmux-plugins/tmux-resurrect'
# persists tmux session
# Prefix + Ctrl-s to save
# Prefix + Ctrl-r to restore
# sessions files stored in ~/.tmux/resurrect


set -g @plugin 'tmux-plugins/tmux-continuum'
# continuous saving of tmux sessions (built on top of tmux-resurrect)
# Do not call tmux automatically on system start-up
set -g @continuum-boot 'off'
# automatic restore tmux session
set -g @continuum-restore 'on'


set -g @plugin 'tmux-plugins/tmux-sessionist'
# easy tmux session management
# prefix + g - prompts for session name and switches to it. Performs 'kind-of' name completion.
# Faster than the built-in prefix + s prompt for long session lists.
# prefix + C (shift + c) - prompt for creating a new session by name.
# prefix + X (shift + x) - kill current session without detaching tmux.
# prefix + g (shift + g) - switch to previous session
set -g @sessionist-alternate 'S'
set -g @sessionist-goto 'g'
set -g @sessionist-new 'C'
set -g @sessionist-kill-session 'X'
set -g @sessionist-join-pkne 't'
set -g @sessionist-promote-pane 'T'


set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# better mouse integration with tmux. check below options if behavior if weird
# look at the github repo for more info
set -g @scroll-down-exit-copy-mode "off" # default on
set -g @scroll-without-changing-pane "on" # default off
set -g @scroll-in-moused-over-pane "on" # default on
set -g @scroll-speed-num-lines-per-scroll "3" # default 3
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on" # default off

set -g @plugin 'fcsonline/tmux-thumbs'
# defaults taken from https://github.com/fcsonline/tmux-thumbs
# set -g @thumbs-command 'echo -n {} | pbcopy'
# set -g @thumbs-upcase-command 'echo -n {} | pbcopy'
set -g @thumbs-contrast 1

set -g @plugin 'wfxr/tmux-fzf-url'
set -g @fzf-url-bind 'o'
set -g @fzf-url-history-limit '100000'


## Statusline related plugins
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# Shows on status bar if you pressed prefix or if you are in copy mode
# just add #{prefix_highlight} to status-left/right
#custom config
set -g @prefix_highlight_fg '#{COLOR_ACTIVE_FILL}'
set -g @prefix_highlight_bg '#{COLOR_ACTIVE_ACCENT}'
set -g @prefix_highlight_prefix_prompt 'Prompt'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_prompt 'Copy'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_prompt 'Sync'
set -g @prefix_highlight_output_prefix "#{E:ACTIVE_PRIMARY} "
set -g @prefix_highlight_output_suffix " #{E:ACTIVE_SECONDARY}"
# set -g @prefix_highlight_copy_mode_attr "#{E:ACTIVE_SECONDARY}"
# set -g @prefix_highlight_sync_mode_attr "#{E:ACTIVE_SECONDARY}"

set -g @plugin 'tmux-plugins/tmux-battery'
# Allows putting battery icons and notifications on the status-bar
set -g @batt_remain_short true

###############################################################################
# TPM Bootstrap

# Auto Install TMUX plugin manager if it doesn't exist
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'
