#####################################
# Oh-My-Zsh Setup

# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="refined"
ZSH_THEME="spaceship"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy/mm/dd"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  vi-mode
  git
  gitfast
  zsh-nvm
  zsh-better-npm-completion
  zsh-completions
  zsh-syntax-highlighting
  zsh-autosuggestions
)

# zsh-nvm config must be set before sourcing oh-my-zsh
# if set to true nvm will not auto load on start up
NVM_LAZY_LOAD=true
# if set to true nvm use <version> must be used explicitly before running node/npm commands
NVM_NO_USE=false
# if set to true call nvm use is automatically called when you cd into a dir with a .nvmrc file
NVM_AUTO_USE=false

# Brew shell completion for zsh. Must be set before sourcing oh-my-zsh
if [ -x "$(command -v brew)" ]; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
fi

source $ZSH/oh-my-zsh.sh


#####################################
# User Configuration
#

# reset prompt
DEFAULT_USER=$USER
prompt_context() {}

# lang
export LANG=en_US.UTF-8

# zsh-autosuggestions
# colors https://upload.wikimedia.org/wikipedia/commons/1/15/Xterm_256color_chart.svg
# bindkey variables https://unix.stackexchange.com/a/117162
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=248'
# accept suggestion word by word (ctrl+w)
bindkey '^w' forward-word
# accept all suggestions (ctrl+space)
bindkey '^ ' autosuggest-accept
# execute suggestion (ctrl+e)
bindkey '^e' autosuggest-execute

# z
export _Z_DATA=~/.z.datafile
. ~/.z/z.sh

# fzf
source ~/.fzf.zsh
if ! [ -x "$(command -v fzf)" ]; then
  ~/.fzf/install --key-bindings --completion --no-update-rc --no-bash --no-fish
fi

# zsh-spaceship-prompt
# https://github.com/denysdovhan/spaceship-prompt/blob/master/docs/Options.md
SPACESHIP_PROMPT_ORDER=(
  dir
  git
  line_sep # next line
  char
)
SPACESHIP_RPROMPT_ORDER=(
  battery
  jobs
  exec_time
)
#SPACESHIP_CHAR_SYMBOL="Œª"
SPACESHIP_CHAR_SYMBOL="‚ùØ"
SPACESHIP_CHAR_SUFFIX=" "
SPACESHIP_PROMPT_FIRST_PREFIX_SHOW="false"
SPACESHIP_USER_SHOW="false"
SPACESHIP_HOST_SHOW="false"
SPACESHIP_TIME_SHOW="true"
SPACESHIP_EXIT_CODE_SHOW="false"
SPACESHIP_BATTERY_SHOW="true"
SPACESHIP_BATTERY_PREFIX=""
SPACESHIP_BATTERY_SUFFIX="üîã "
SPACESHIP_BATTERY_THRESHOLD="10"
SPACESHIP_BATTERY_SYMBOL_CHARGING=""
SPACESHIP_BATTERY_SYMBOL_DISCHARGING=""
SPACESHIP_BATTERY_SYMBOL_FULL=""
SPACESHIP_DIR_TRUNC_PREFIX=""
SPACESHIP_DIR_LOCK_SYMBOL="üîí"
SPACESHIP_DIR_TRUNC_REPO="true"
SPACESHIP_JOBS_SYMBOL=""

# git
git config --global mergetool.keepBackup false
git config --global alias.lg !"git log --stat --diff-algorithm=minimal --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'"


#####################################
# Functions
#

# do a fuzzy checkout in the shell using git.
# pass update as second param to git fetch and pull all the things before and after checkout
function git_checkout_fuzzy() {
  if [ "$1" = "update" ]; then
    git fetch
  fi
  local branches branch
  branches=$(git branch -a) &&
    branch=$(echo "$branches" | fzf +s +m -e) &&
    git checkout $(echo "$branch" | sed "s:.* remotes/origin/::" | sed "s:.* ::")
  if [ "$1" = "update" ]; then
    git pull
  fi
}


#####################################
# Aliases
#

# git
alias g='git'
alias gs='git status'
alias gap='git add --patch'
alias gcof='git_checkout_fuzzy'
alias gcop='git checkout --patch'
alias gsa='git submodule add'

# misc
alias l='ls -all'
alias zr='source ~/.zshrc'
alias ze='vim ~/.zshrc'

# use nvim if possible, vim otherwise
if [ -x "$(command -v nvim)" ]; then
  alias vim=nvim
fi

# use vscode-insiders as code if installed
if [ -x "$(command -v code-insiders)" ]; then
  alias code=code-insiders
fi


#####################################
